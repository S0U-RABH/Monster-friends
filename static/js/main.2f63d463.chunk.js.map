{"version":3,"sources":["components/card/Card.component.jsx","components/Card-List/Card-List.component.jsx","components/Search-Box/Search-Box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","options","max","alt","src","monster","id","name","email","CardList","monstersss","map","SearchBox","placeholder","handlechange","type","onChange","particlesOptions","particles","number","value","density","enable","value_area","App","state","searchField","fetch","then","responce","json","users","setState","this","filteredmonster","filter","toLowerCase","includes","params","e","target","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAGaA,EAAO,SAACC,GACjB,OACI,8BACI,cAAC,IAAD,CAAMC,UAAU,OAAOC,QAAS,CAAEC,IAAK,IAAvC,SACI,sBAAKF,UAAU,iBAAf,UAGI,qBAAKG,IAAI,UAAUC,IAAG,+BAA0BL,EAAMM,QAAQC,GAAxC,4BACtB,6BAAKP,EAAMM,QAAQE,OACnB,6BAAKR,EAAMM,QAAQG,gBCR1BC,EAAW,SAACV,GACrB,OACI,qBAAKC,UAAU,YAAf,SACID,EAAMW,WAAWC,KAAI,SAAAN,GAAO,OACxB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCNtBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACjB,uBACId,UAAU,SACVe,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,yBCChBG,EAAmB,CACvBC,UAAW,CACTC,OAAQ,CACNC,MAAO,GACPC,QAAS,CACPC,QAAQ,EACRC,WAAY,QA4CLC,E,kDArCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXpB,QAAS,GACTqB,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAE3B,QAAS0B,S,oBAI5C,WAAU,IAAD,OACP,EAAiCE,KAAKR,MAA9BpB,EAAR,EAAQA,QAASqB,EAAjB,EAAiBA,YACXQ,EAAkB7B,EAAQ8B,QAC9B,SAAA9B,GAAO,OAAIA,EAAQE,KAAK6B,cAAcC,SAASX,EAAYU,kBAG7D,OACE,sBAAKpC,UAAU,MAAf,UACE,cAAC,IAAD,CAAWA,UAAU,YACnBsC,OAAQrB,IAEV,8BACE,mDAEF,cAAC,EAAD,CAAWJ,YAAY,iBAAiBC,aAAc,SAAAyB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOpB,WAEjG,cAAC,EAAD,CAAUV,WAAYwB,W,GA/BZO,aCRHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.2f63d463.chunk.js","sourcesContent":["import './Card.style.css';\r\nimport Tilt from 'react-tilt'\r\n\r\nexport const Card = (props) => {\r\n    return (\r\n        <div>\r\n            <Tilt className=\"Tilt\" options={{ max: 25 }} >\r\n                <div className='card-container'>\r\n                    {/* `https://robohash.org/${props.monster.id}?set=set2&size=180x180`   // use for monster*/}\r\n                    {/* `https://robohash.org/${props.monster.id}?200x200`   // use for Robots */}\r\n                    <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n                    <h2>{props.monster.name}</h2>\r\n                    <h3>{props.monster.email}</h3>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    )\r\n}","import './Card-List.Style.css';\r\n\r\nimport { Card } from '../card/Card.component';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className='card-list'>{\r\n            props.monstersss.map(monster =>\r\n                <Card key={monster.id} monster={monster} />\r\n            )}\r\n        </div>\r\n    )\r\n};","import '../Search-Box/Search-Box.style.css';\r\n\r\nexport const SearchBox = ({placeholder, handlechange}) =>  (\r\n        <input\r\n            className='search'\r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={handlechange}\r\n        />\r\n    );\r\n","import { Component } from 'react';\nimport { CardList } from './components/Card-List/Card-List.component';\nimport { SearchBox } from './components/Search-Box/Search-Box.component';\nimport React from 'react';\nimport './App.css';\nimport Particles from 'react-particles-js';\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 45,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monster: [],\n      searchField: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(responce => responce.json())\n      .then(users => this.setState({ monster: users }));\n  }\n\n\n  render() {\n    const { monster, searchField } = this.state;\n    const filteredmonster = monster.filter(\n      monster => monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <div>\n          <h1>Monster Friends</h1>\n        </div>\n        <SearchBox placeholder='Search Mosters' handlechange={e => this.setState({ searchField: e.target.value })} />\n\n        <CardList monstersss={filteredmonster} />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}